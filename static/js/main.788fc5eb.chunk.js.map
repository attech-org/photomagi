{"version":3,"sources":["redux/app/types.ts","containers/Layout.tsx","pages/Dashboard.tsx","pages/Landing.tsx","App.tsx","redux/app/reducer.ts","redux/store.ts","index.tsx"],"names":["AppActions","StyledMain","styled","main","Layout","children","to","DashboardPage","LandingPage","App","path","exact","Landing","Dashboard","initialStore","counter","fighters","app","store","action","type","INC_COUNTER","payload","DEC_COUNTER","SET_FIGHTERS","rootReducer","combineReducers","middlewares","push","thunk","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHAEYA,E,+ECCNC,EAAaC,IAAOC,KAAV,gMAiBDC,EARyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtC,qCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,0BACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAACL,EAAD,UAAaI,QCRFE,EANgC,kBAC7C,eAAC,EAAD,WACE,4CADF,QCKaC,EAN8B,kBAC3C,cAAC,EAAD,UACE,kDCiBWC,EAhBsB,kBACnC,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,aAAZ,SACE,cAACG,EAAD,MAEF,cAAC,IAAD,CAAOH,KAAK,IAAZ,SACE,8D,yCJbIV,K,0BAAAA,E,0BAAAA,E,6BAAAA,M,KKaZ,IAAMc,EAAyB,CAC7BC,QAAS,EACTC,SAAU,IAgBGC,EAbH,WAAmD,IAAlDC,EAAiD,uDAAzCJ,EAAcK,EAA2B,uCAC5D,OAAQA,EAAOC,MACb,KAAKpB,EAAWqB,YACd,OAAO,2BAAKH,GAAZ,IAAmBH,QAASG,EAAMH,QAAUI,EAAOG,UACrD,KAAKtB,EAAWuB,YACd,OAAO,2BAAKL,GAAZ,IAAmBH,QAASG,EAAMH,QAAUI,EAAOG,UACrD,KAAKtB,EAAWwB,aACd,OAAO,2BAAKN,GAAZ,IAAmBF,SAAUG,EAAOG,UACtC,QACE,OAAOJ,ICvBPO,EAAcC,YAAgB,CAClCT,QAGIU,EAAc,GAEpBA,EAAYC,KAAKC,KAMFC,kBAAYL,EAAaM,IAAe,WAAf,EAAmBJ,I,MCT3DK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJiB,SAASC,eAAe,W","file":"static/js/main.788fc5eb.chunk.js","sourcesContent":["import { Fighter } from './reducer';\r\n\r\nexport enum AppActions {\r\n  INC_COUNTER = 'INC_COUNTER',\r\n  DEC_COUNTER = 'DEC_COUNTER',\r\n  SET_FIGHTERS = 'SET_FIGHTERS',\r\n}\r\n\r\ninterface IncreaseCounterAction {\r\n  type: AppActions.INC_COUNTER;\r\n  payload: number;\r\n}\r\n\r\ninterface DecreaseCounterAction {\r\n  type: AppActions.DEC_COUNTER;\r\n  payload: number;\r\n}\r\n\r\ninterface AddFightersAction {\r\n  type: AppActions.SET_FIGHTERS;\r\n  payload: Fighter[];\r\n}\r\n\r\nexport type AppActionTypes = IncreaseCounterAction | DecreaseCounterAction | AddFightersAction;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: calc(100vh - 100px);\r\n`;\r\n\r\nconst Layout: React.FunctionComponent = ({ children }) => (\r\n  <>\r\n    <Link to=\"/\">Landing page</Link>\r\n    <Link to=\"/dashboard\">Dashboard</Link>\r\n    <StyledMain>{children}</StyledMain>\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst DashboardPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Dashboard</div>;\r\n  </Layout>\r\n);\r\n\r\nexport default DashboardPage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst LandingPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Landing page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default LandingPage;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport DashboardPage from './pages/Dashboard';\r\nimport LandingPage from './pages/Landing';\r\n\r\nconst App: React.FunctionComponent = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <LandingPage />\r\n      </Route>\r\n      <Route path=\"/dashboard\">\r\n        <DashboardPage />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <div>THIS PAGE NOT EXIST</div>\r\n      </Route>\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import { AppActionTypes, AppActions } from './types';\r\n\r\nexport interface Fighter {\r\n  attack: number;\r\n  defense: number;\r\n  health: number;\r\n  name: string;\r\n  source: string;\r\n}\r\n\r\nexport interface AppStore {\r\n  counter: number;\r\n  fighters: Fighter[];\r\n}\r\n\r\nconst initialStore: AppStore = {\r\n  counter: 0,\r\n  fighters: [],\r\n};\r\n\r\nconst app = (store = initialStore, action: AppActionTypes) => {\r\n  switch (action.type) {\r\n    case AppActions.INC_COUNTER:\r\n      return { ...store, counter: store.counter + action.payload };\r\n    case AppActions.DEC_COUNTER:\r\n      return { ...store, counter: store.counter - action.payload };\r\n    case AppActions.SET_FIGHTERS:\r\n      return { ...store, fighters: action.payload };\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport app from './app/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n});\r\n\r\nconst middlewares = [];\r\n\r\nmiddlewares.push(thunk);\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport type RootStore = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}