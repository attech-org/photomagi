{"version":3,"sources":["redux/profile/types.ts","firebase/firebase-config.tsx","components/Login.tsx","components/Register.tsx","redux/profile/actions.ts","redux/movies/types.ts","assets/img/logo.png","containers/ResponsiveHeader.tsx","containers/Sidebar.tsx","containers/Layout.tsx","pages/ComingSoon.tsx","components/MovieCard.tsx","components/FiveFilmsCarousel.tsx","components/MainCarousel.tsx","components/SidePanel.tsx","services/api.ts","redux/movies/actions.ts","containers/Dashboard.tsx","pages/Dashboard.tsx","pages/Discovery.tsx","pages/Library.tsx","pages/MyList.tsx","containers/Profile.tsx","pages/Profile.tsx","pages/Recent.tsx","pages/Settings.tsx","containers/TvShow.tsx","pages/TvShow.tsx","containers/WatchMovie.tsx","pages/WatchMovie.tsx","containers/WatchNow.tsx","pages/WatchNow.tsx","App.tsx","redux/movies/reducer.ts","redux/profile/reducer.ts","redux/store.ts","index.tsx"],"names":["ProfileActions","app","initializeApp","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","getAuth","LogInModal","styled","Modal","LoginButton","Button","LoginModal","title","useState","visibleLogin","setVisibleLogin","onFinish","values","a","signInWithEmailAndPassword","Email","password","console","error","type","onClick","visible","onCancel","footer","name","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","rules","required","message","Password","offset","htmlType","StyledRegisterModal","RegisterButton","RegisterModal","visibleRegister","setVisibleRegister","createUserWithEmailAndPassword","MoviesActions","setUser","value","SET_CURRENT_USER","payload","updateUser","UPDATE_CURRENT_USER","Menu","Search","Input","RowWrap","Row","Logo","img","SearchResult","styles","bmBurgerButton","position","width","height","top","right","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","color","bmItem","display","bmOverlay","StyledMenu","Line","Divider","LinkItem","Link","BurgerMenuWrap","BurgerMenu","Profile","div","Wrapper","WrapModal","ResponsiveHeader","dispatch","useDispatch","profile","useSelector","store","useEffect","onAuthStateChanged","currentUser","logout","signOut","undefined","to","email","icon","LogoutOutlined","Login","Register","align","justify","src","logo","placeholder","isOpen","defaultSelectedKeys","defaultOpenKeys","mode","theme","AppstoreFilled","SwapOutlined","disabled","size","count","FolderViewOutlined","DingtalkSquareFilled","PlayCircleFilled","DatabaseFilled","StarFilled","SettingFilled","NormalSider","Sider","Layout","ItemGroupStld","ItemGroup","props","className","Sidebar","location","useLocation","isCollapsed","onCollapsedChange","collapsible","collapsed","onCollapse","collapsedWidth","selectedKeys","pathname","toString","Content","Text","Typography","StyledHeader","Header","LayoutWrapper","children","Footer","ComingSoonPage","Card","resource","FilmTitle","p","RateBox","StyledRate","Rate","MovieCard","id","image","imDbRating","replace","defaultValue","Number","section","TopTitle","StyledCarousel","Carousel","SlideContent","Space","FiveFilmsCarousel","movies","slidesCount","Math","ceil","length","slidesContentCount","window","innerWidth","antIcon","LoadingOutlined","style","spin","indicator","autoplay","dotPosition","Array","map","el","i","slice","Date","now","Main","Title","h3","Btn","SpinContainer","MainCarousel","tooltips","allowHalf","danger","BoxTitle","Year","Image","Info","SidePanel","year","alt","moviesApi","axios","create","baseURL","mostPopularMovies","get","res","data","errorMessage","Error","items","warn","singleMovie","trailer","mostPopularTVs","loadMovieTitle","SET_MOVIE_TITLE","DashboardContainer","sortedMovies","sort","random","SET_MOVIES","sm","lg","DashboardPage","Dashboard","DiscoveryPage","LibraryPage","MyListPage","ProfileContainer","isModalVisible","setIsModalVisible","Form","useForm","profileForm","resetFields","displayName","ghost","form","layout","updateEmail","updateProfile","ProfilePage","RecentPage","SettingsPage","TvShowContainer","series","sortedSeries","SET_TV","TvShowPage","TvShow","BeforeTitleSection","TopInfo","InfoItem","AfterTitleSection","Keywords","Plot","BtnBox","ButtonTrailer","Similar","StyledImage","WatchMovieContainer","SET_MOVIE_TRAILER","posters","link","toUpperCase","includes","runtimeMins","runtimeStr","textAlign","level","gutter","xs","keywords","split","word","plot","href","images","imDbid","wrap","similars","fullTitle","WatchMoviePage","movieId","WatchMovie","WatchNowContainer","url","playlist","adNetwork","WatchNowPage","WatchNow","App","path","exact","Recent","Discovery","ComingSoon","Library","MyList","Settings","render","match","params","initialStore","action","rootReducer","combineReducers","middlewares","push","thunk","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff5a0eea.chunk.js","sourcesContent":["import { User } from 'firebase/auth';\r\n\r\nexport enum ProfileActions {\r\n  SET_CURRENT_USER = 'SET_CURRENT_USER',\r\n  UPDATE_CURRENT_USER = 'UPDATE_CURRENT_USER',\r\n}\r\n\r\ninterface SetCurrentUserAction {\r\n  type: ProfileActions.SET_CURRENT_USER;\r\n  payload?: User;\r\n}\r\n\r\ninterface UpdateCurrentUserAction {\r\n  type: ProfileActions.UPDATE_CURRENT_USER;\r\n  payload: Partial<User>;\r\n}\r\nexport type ProfileActionTypes = SetCurrentUserAction | UpdateCurrentUserAction;\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst app = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = getAuth(app);\r\n","import { Button, Input, Modal, Form } from 'antd';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { auth } from '../firebase/firebase-config';\r\n\r\nconst LogInModal = styled(Modal)``;\r\nconst LoginButton = styled(Button)`\r\n  background-color: #1f1f1f;\r\n  border: none;\r\n  &:hover {\r\n    background-color: #177ddc;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nexport interface LoginModalProps {\r\n  title: string;\r\n}\r\n\r\ninterface OnFinish {\r\n  Email: string;\r\n  password: string;\r\n}\r\nconst LoginModal: React.FunctionComponent<LoginModalProps> = ({ title }) => {\r\n  const [visibleLogin, setVisibleLogin] = useState(false);\r\n\r\n  const onFinish = async (values: OnFinish) => {\r\n    try {\r\n      await signInWithEmailAndPassword(auth, values.Email, values.password);\r\n      setVisibleLogin(false);\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const showModalLogin = () => {\r\n    setVisibleLogin(true);\r\n  };\r\n\r\n  const handleCancelLogin = () => {\r\n    setVisibleLogin(false);\r\n  };\r\n  return (\r\n    <>\r\n      <LoginButton type=\"primary\" onClick={() => showModalLogin()}>\r\n        {title}\r\n      </LoginButton>\r\n      <LogInModal title=\"Log In\" visible={visibleLogin} onCancel={handleCancelLogin} footer={null}>\r\n        <Form\r\n          name=\"LoginForm\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={{ remember: true }}\r\n          autoComplete=\"off\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"Email\"\r\n            rules={[{ required: true, message: 'Please input your Email!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 9, span: 15 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </LogInModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import { Button, Input, Modal, Form } from 'antd';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { auth } from '../firebase/firebase-config';\r\n\r\nconst StyledRegisterModal = styled(Modal)``;\r\nconst RegisterButton = styled(Button)`\r\n  background-color: #1f1f1f;\r\n  border: none;\r\n  &:hover {\r\n    background-color: #177ddc;\r\n  }\r\n  background-color: #1f1f1f;\r\n  border: none;\r\n  &:hover {\r\n    background-color: #177ddc;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    background-color: transparent;\r\n  }\r\n`;\r\ninterface OnFinish {\r\n  Email: string;\r\n  password: string;\r\n}\r\nconst RegisterModal: React.FunctionComponent = () => {\r\n  const [visibleRegister, setVisibleRegister] = useState(false);\r\n\r\n  const onFinish = async (values: OnFinish) => {\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, values.Email, values.password);\r\n      setVisibleRegister(false);\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const showModalRegister = () => {\r\n    setVisibleRegister(true);\r\n  };\r\n\r\n  const handleCancelRegister = () => {\r\n    setVisibleRegister(false);\r\n  };\r\n  return (\r\n    <>\r\n      <RegisterButton type=\"primary\" onClick={showModalRegister}>\r\n        Register\r\n      </RegisterButton>\r\n      <StyledRegisterModal\r\n        title=\"Sign In\"\r\n        visible={visibleRegister}\r\n        onCancel={handleCancelRegister}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"RegisterForm\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={{ remember: true }}\r\n          autoComplete=\"off\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"Email\"\r\n            rules={[{ required: true, message: 'Please input your Email!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 9, span: 15 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register Now\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </StyledRegisterModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterModal;\r\n","import { getAuth, updateEmail, updateProfile, User } from 'firebase/auth';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ProfileActionTypes, ProfileActions } from './types';\r\n\r\nconst auth = getAuth();\r\nexport const setUser = (value: User | undefined): ProfileActionTypes => ({\r\n  type: ProfileActions.SET_CURRENT_USER,\r\n  payload: value,\r\n});\r\n\r\nexport const updateUser = (value: Partial<User>): ProfileActionTypes => ({\r\n  type: ProfileActions.UPDATE_CURRENT_USER,\r\n  payload: value,\r\n});\r\n\r\nexport const updateUserAsync = (value: Partial<User>) => async (dispatch: Dispatch) => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    if (value.email) {\r\n      await updateEmail(auth.currentUser, '' && value);\r\n    }\r\n\r\n    await updateProfile(auth.currentUser, value);\r\n    dispatch(updateUser(value));\r\n  }\r\n};\r\n","import { MostPopularMovie, SingleMovie, Trailer } from '../../services/types';\r\n\r\nexport enum MoviesActions {\r\n  SET_MOVIES = 'SET_MOVIES',\r\n  SET_MOVIE_TITLE = 'SET_MOVIE_TITLE',\r\n  SET_MOVIE_TRAILER = 'SET_MOVIE_TRAILER',\r\n  SET_TV = 'SET_TV',\r\n}\r\n\r\ninterface SetMoviesDataAction {\r\n  type: MoviesActions.SET_MOVIES;\r\n  payload: MostPopularMovie[];\r\n}\r\n\r\ninterface SetMovieTitleAction {\r\n  type: MoviesActions.SET_MOVIE_TITLE;\r\n  payload: SingleMovie;\r\n}\r\n\r\ninterface SetMovieTrailerAction {\r\n  type: MoviesActions.SET_MOVIE_TRAILER;\r\n  payload: Trailer;\r\n}\r\n\r\ninterface SetTVDataAction {\r\n  type: MoviesActions.SET_TV;\r\n  payload: MostPopularMovie[];\r\n}\r\n\r\nexport type MoviesActionTypes =\r\n  | SetMoviesDataAction\r\n  | SetMovieTitleAction\r\n  | SetTVDataAction\r\n  | SetMovieTrailerAction;\r\n","export default __webpack_public_path__ + \"static/media/logo.64719e73.png\";","import {\r\n  AppstoreFilled,\r\n  DatabaseFilled,\r\n  DingtalkSquareFilled,\r\n  FolderViewOutlined,\r\n  LogoutOutlined,\r\n  PlayCircleFilled,\r\n  SettingFilled,\r\n  StarFilled,\r\n  SwapOutlined,\r\n} from '@ant-design/icons';\r\nimport { Badge, Button, Divider, Input, Menu, Row } from 'antd';\r\nimport Text from 'antd/lib/typography/Text';\r\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\r\nimport { useEffect } from 'react';\r\nimport { slide as BurgerMenu } from 'react-burger-menu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport logo from '../assets/img/logo.png';\r\nimport LoginModal from '../components/Login';\r\nimport RegisterModal from '../components/Register';\r\nimport { auth } from '../firebase/firebase-config';\r\nimport { setUser } from '../redux/profile/actions';\r\nimport { ProfileStore } from '../redux/profile/reducer';\r\nimport { RootStore } from '../redux/store';\r\n\r\nconst { Item } = Menu;\r\nconst { Search } = Input;\r\n\r\nconst RowWrap = styled(Row)`\r\n  display: none;\r\n  @media screen and (max-width: 576px) {\r\n    display: inline-flex;\r\n    &:first-child {\r\n      flex-direction: row-reverse;\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  display: block;\r\n  width: 32px;\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n`;\r\n\r\nconst SearchResult = styled(Search)`\r\n  width: 70vw;\r\n  margin: 0 1rem;\r\n  @media screen and (max-width: 530px) {\r\n    width: 69vw;\r\n  }\r\n  @media screen and (max-width: 490px) {\r\n    width: 67vw;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    width: 65vw;\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    width: 63vw;\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  bmBurgerButton: {\r\n    position: 'absolute',\r\n    width: '33px',\r\n    height: '30px',\r\n    top: '65px',\r\n    right: '16px',\r\n  },\r\n  bmBurgerBars: {\r\n    background: '#af0c0c',\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: '#a90000',\r\n  },\r\n  bmCrossButton: {\r\n    height: '24px',\r\n    width: '24px',\r\n    top: '20px',\r\n    right: '20px',\r\n  },\r\n  bmCross: {\r\n    background: '#bdc3c7',\r\n  },\r\n  bmMenuWrap: {\r\n    position: 'fixed',\r\n    height: '100%',\r\n    top: '0px',\r\n    width: '100%',\r\n  },\r\n  bmMenu: {\r\n    background: '#1f1f1f',\r\n    padding: '2.5em 1.5em 0',\r\n    fontSize: '1.15em',\r\n  },\r\n  bmMorphShape: {\r\n    fill: '#373a47',\r\n  },\r\n  bmItemList: {\r\n    color: '#b8b7ad',\r\n    padding: '0.8em',\r\n  },\r\n  bmItem: {\r\n    display: 'inline-block',\r\n  },\r\n  bmOverlay: {\r\n    background: 'rgba(0, 0, 0, 0.3)',\r\n  },\r\n};\r\n\r\nconst StyledMenu = styled(Menu)`\r\n  width: 100% !important;\r\n`;\r\n\r\nconst Line = styled(Divider)`\r\n  margin: 0;\r\n`;\r\n\r\nconst LinkItem = styled(Link)`\r\n  font-size: 1.3rem;\r\n  &:hover {\r\n    color: #f02020 !important;\r\n  }\r\n`;\r\n\r\nconst BurgerMenuWrap = styled(BurgerMenu)`\r\n  position: relative;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  position: absolute;\r\n  top: 17px;\r\n  right: 40px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst WrapModal = styled.div`\r\n  margin-right: -50px;\r\n`;\r\n\r\nconst ResponsiveHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector<RootStore, ProfileStore['profile']>((store) => store.profile.profile);\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (currentUser) => currentUser && dispatch(setUser(currentUser)));\r\n  }, []);\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      dispatch(setUser(undefined));\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <RowWrap>\r\n        {profile ? (\r\n          <WrapModal>\r\n            <Link to=\"/profile\">\r\n              <Text>{profile.email}</Text>\r\n            </Link>\r\n\r\n            <Divider type=\"vertical\" />\r\n            <Button icon={<LogoutOutlined />} onClick={logout} type=\"ghost\" htmlType=\"button\">\r\n              Log Out\r\n            </Button>\r\n          </WrapModal>\r\n        ) : (\r\n          <WrapModal>\r\n            <LoginModal title=\"Log In\" />\r\n            <Divider type=\"vertical\" />\r\n            <RegisterModal />\r\n          </WrapModal>\r\n        )}\r\n      </RowWrap>\r\n      <RowWrap align=\"middle\" justify=\"space-between\">\r\n        <Link to=\"/\">\r\n          <Logo src={logo} />\r\n        </Link>\r\n        <SearchResult placeholder=\"Search By Movie...\" />\r\n        <BurgerMenuWrap styles={styles} right isOpen={false}>\r\n          {profile ? (\r\n            <Profile>\r\n              <Text>{profile.email}</Text>\r\n              <Divider type=\"vertical\" />\r\n              <Button icon={<LogoutOutlined />} onClick={logout} type=\"ghost\" htmlType=\"button\">\r\n                Log Out\r\n              </Button>\r\n              <Divider type=\"vertical\" />\r\n            </Profile>\r\n          ) : null}\r\n          <StyledMenu\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n          >\r\n            <Item key=\"/dashboard\" icon={<AppstoreFilled />}>\r\n              <LinkItem to=\"/dashboard\">Dashboard</LinkItem>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/recent\" icon={<SwapOutlined />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/recent\">Recent</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/discovery\" icon={<FolderViewOutlined />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/discovery\">Discovery</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/coming-soon\" icon={<DingtalkSquareFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/coming-soon\">Coming Soon</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/tv-show\" icon={<PlayCircleFilled />} title=\"coming soon\">\r\n              <LinkItem to=\"/tv-show\">Tv Show</LinkItem>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/library\" icon={<DatabaseFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/library\">Library</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/my-list\" icon={<StarFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/my-list\">My List</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n            <Line />\r\n            <Item key=\"/settings\" icon={<SettingFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <LinkItem to=\"/settings\">Settings</LinkItem>\r\n              </Badge>\r\n            </Item>\r\n          </StyledMenu>\r\n        </BurgerMenuWrap>\r\n      </RowWrap>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ResponsiveHeader;\r\n","import {\r\n  AppstoreFilled,\r\n  DatabaseFilled,\r\n  DingtalkSquareFilled,\r\n  FolderViewOutlined,\r\n  LogoutOutlined,\r\n  PlayCircleFilled,\r\n  SettingFilled,\r\n  StarFilled,\r\n  SwapOutlined,\r\n} from '@ant-design/icons';\r\nimport { Badge, Col, Layout, Menu, Row } from 'antd';\r\nimport { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport logo from '../assets/img/logo.png';\r\n\r\nconst { Item } = Menu;\r\n\r\nconst NormalSider = styled.div`\r\n  @media screen and (max-width: 576px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Sider = styled(Layout.Sider)`\r\n  height: 100%;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  display: block;\r\n  width: 35%;\r\n  margin: 15% auto 10%;\r\n`;\r\n\r\nconst ItemGroupStld = styled(Menu.ItemGroup)`\r\n  .ant-menu-item-group-title {\r\n    color: #ffffff;\r\n    font-weight: 500;\r\n    display: ${(props) => (props.className === 'true' ? 'none' : 'initial')};\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  const [isCollapsed, onCollapsedChange] = useState(false);\r\n\r\n  return (\r\n    <NormalSider>\r\n      <Sider collapsible collapsed={isCollapsed} onCollapse={onCollapsedChange} collapsedWidth={50}>\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/\">\r\n              <Logo src={logo} />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Menu theme=\"dark\" selectedKeys={[location.pathname]} mode=\"inline\">\r\n          <ItemGroupStld className={isCollapsed.toString()} key=\"g1\" title=\"MENU\">\r\n            <Item key=\"/dashboard\" icon={<AppstoreFilled />}>\r\n              <Link to=\"/dashboard\">Dashboard</Link>\r\n            </Item>\r\n            <Item key=\"/recent\" icon={<SwapOutlined />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/recent\">Recent</Link>\r\n              </Badge>\r\n            </Item>\r\n            <Item key=\"/discovery\" icon={<FolderViewOutlined />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/discovery\">Discovery</Link>\r\n              </Badge>\r\n            </Item>\r\n            <Item key=\"/coming-soon\" icon={<DingtalkSquareFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/coming-soon\">Coming Soon</Link>\r\n              </Badge>\r\n            </Item>\r\n            <Item key=\"/tv-show\" icon={<PlayCircleFilled />} title=\"coming soon\">\r\n              <Link to=\"/tv-show\">Tv Show</Link>\r\n            </Item>\r\n          </ItemGroupStld>\r\n          <ItemGroupStld className={isCollapsed.toString()} key=\"g2\" title=\"LIBRARY\">\r\n            <Item key=\"/library\" icon={<DatabaseFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/library\">Library</Link>\r\n              </Badge>\r\n            </Item>\r\n            <Item key=\"/my-list\" icon={<StarFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/my-list\">My List</Link>\r\n              </Badge>\r\n            </Item>\r\n          </ItemGroupStld>\r\n          <ItemGroupStld className={isCollapsed.toString()} key=\"g3\" title=\"GENERAL\">\r\n            <Item key=\"/settings\" icon={<SettingFilled />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/settings\">Settings</Link>\r\n              </Badge>\r\n            </Item>\r\n            <Item key=\"/logout\" icon={<LogoutOutlined />} disabled title=\"coming soon\">\r\n              <Badge size=\"small\" count=\"soon\" color=\"red\" offset={[5, 7]}>\r\n                <Link to=\"/logout\">Log Out</Link>\r\n              </Badge>\r\n            </Item>\r\n          </ItemGroupStld>\r\n        </Menu>\r\n      </Sider>\r\n    </NormalSider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { LogoutOutlined } from '@ant-design/icons';\r\nimport { Layout, Input, Button, Divider, Typography } from 'antd';\r\nimport { signOut, onAuthStateChanged } from 'firebase/auth';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport LoginModal from '../components/Login';\r\nimport RegisterModal from '../components/Register';\r\nimport { auth } from '../firebase/firebase-config';\r\nimport { setUser } from '../redux/profile/actions';\r\nimport { ProfileStore } from '../redux/profile/reducer';\r\nimport { RootStore } from '../redux/store';\r\nimport ResponsiveHeader from './ResponsiveHeader';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst StyledHeader = styled(Layout.Header)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: transparent;\r\n  @media screen and (max-width: 576px) {\r\n    padding: 1rem;\r\n    min-height: 114px;\r\n    align-items: flex-start;\r\n    line-height: 0;\r\n  }\r\n`;\r\n\r\nconst SearchResult = styled(Search)`\r\n  width: 30vw;\r\n  @media screen and (max-width: 576px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  margin-left: auto;\r\n  @media screen and (max-width: 576px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst LayoutWrapper: React.FC = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector<RootStore, ProfileStore['profile']>((store) => store.profile.profile);\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (currentUser) => currentUser && dispatch(setUser(currentUser)));\r\n  }, []);\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      dispatch(setUser(undefined));\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar />\r\n      <Layout>\r\n        <StyledHeader>\r\n          <SearchResult placeholder=\"Search By Movie...\" />\r\n          {profile ? (\r\n            <Profile>\r\n              <Link to=\"profile\">\r\n                <Text>{profile.email}</Text>\r\n              </Link>\r\n\r\n              <Divider type=\"vertical\" />\r\n              <Button icon={<LogoutOutlined />} onClick={logout} type=\"ghost\" htmlType=\"button\">\r\n                Log Out\r\n              </Button>\r\n            </Profile>\r\n          ) : (\r\n            <Profile>\r\n              <LoginModal title=\"Log In\" />\r\n              <Divider type=\"vertical\" />\r\n              <RegisterModal />\r\n            </Profile>\r\n          )}\r\n          <ResponsiveHeader />\r\n        </StyledHeader>\r\n        <Content>{children}</Content>\r\n        <Layout.Footer>Footer</Layout.Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutWrapper;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst ComingSoonPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Coming Soon page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default ComingSoonPage;\r\n","import { Rate } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n  background: linear-gradient(\r\n      0deg,\r\n      rgba(0, 0, 0, 0.61) 0%,\r\n      rgba(0, 0, 0, 0.14) 25%,\r\n      rgba(0, 0, 0, 0) 50%,\r\n      rgba(0, 0, 0, 0.15) 65%,\r\n      rgba(0, 0, 0, 0.6) 100%\r\n    ),\r\n    ${(props) => `url(${props.resource})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 10rem;\r\n  min-height: 100%;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 0.5rem;\r\n  flex: 0 0 10rem;\r\n  min-width: 10rem;\r\n  min-height: 14rem;\r\n`;\r\nconst FilmTitle = styled.p`\r\n  font-weight: bold;\r\n  line-height: 1.15em;\r\n  color: #f5f5f5;\r\n`;\r\nconst RateBox = styled.div`\r\n  display: flex;\r\n`;\r\nconst StyledRate = styled(Rate)`\r\n  font-size: 13px;\r\n  margin-right: 0.3rem;\r\n`;\r\ninterface MovieCardProps {\r\n  image: string;\r\n  id: string;\r\n  title: string;\r\n  imDbRating: string;\r\n}\r\nconst MovieCard: React.FunctionComponent<MovieCardProps> = ({ id, image, title, imDbRating }) => (\r\n  <Card resource={image.replace(/._.+\\./, () => '._UX1000.')} key={id}>\r\n    <FilmTitle>{title}</FilmTitle>\r\n    <RateBox>\r\n      <StyledRate disabled count={1} defaultValue={Number(imDbRating) / 2} />\r\n      <div>{imDbRating}</div>\r\n    </RateBox>\r\n  </Card>\r\n);\r\n\r\nexport default MovieCard;\r\n","import { LoadingOutlined } from '@ant-design/icons';\r\nimport { Carousel, Space, Spin } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { CarouselContainerProps } from '../containers/Dashboard';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst Content = styled.section`\r\n  padding: 0 1.5rem;\r\n`;\r\nconst TopTitle = styled.p`\r\n  font-size: 180%;\r\n`;\r\nconst StyledCarousel = styled(Carousel)`\r\n  padding-bottom: 2rem;\r\n  .slick-dots-bottom {\r\n    width: 100%;\r\n    margin: 0;\r\n    justify-content: flex-end;\r\n  }\r\n  .slick-dots li.slick-active button {\r\n    background: linear-gradient(#e00000, #a10000);\r\n    padding: 0.2rem;\r\n    border-radius: 10px;\r\n  }\r\n  .slick-dots li {\r\n    margin-right: 1rem;\r\n  }\r\n  .slick-dots li button {\r\n    padding: 0.2rem;\r\n    border-radius: 10px;\r\n    background-color: gray;\r\n  }\r\n  .ant-space-item {\r\n    flex: 1 0 10rem;\r\n    min-width: 10rem;\r\n    min-height: 14rem;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst SlideContent = styled(Space)`\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst FiveFilmsCarousel: React.FunctionComponent<CarouselContainerProps> = ({ movies }) => {\r\n  const slidesCount = Math.ceil(movies.length / 5);\r\n  let slidesContentCount = 5;\r\n  if (window.innerWidth <= 600) {\r\n    slidesContentCount = 2;\r\n  }\r\n  const antIcon = <LoadingOutlined style={{ color: 'red', fontSize: 24 }} spin />;\r\n  return (\r\n    <Content>\r\n      <TopTitle>Now Playing {!movies.length && <Spin indicator={antIcon} />}</TopTitle>\r\n\r\n      <StyledCarousel autoplay dotPosition=\"bottom\">\r\n        {Array(slidesCount)\r\n          .fill(0)\r\n          .map((el, i) => (\r\n            <div key={`slide_${Date.now()}`}>\r\n              <SlideContent>\r\n                {movies\r\n                  .slice(i * slidesContentCount, (i + 1) * slidesContentCount)\r\n                  .map(({ image, id, title, imDbRating }) => (\r\n                    <Link to={`watchmovie/${id}`} key={id}>\r\n                      <MovieCard\r\n                        key={id}\r\n                        id={id}\r\n                        imDbRating={imDbRating}\r\n                        image={image}\r\n                        title={title}\r\n                      />\r\n                    </Link>\r\n                  ))}\r\n              </SlideContent>\r\n            </div>\r\n          ))}\r\n      </StyledCarousel>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default FiveFilmsCarousel;\r\n","import { LoadingOutlined } from '@ant-design/icons';\r\nimport { Button, Carousel, Rate, Space, Spin } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { CarouselContainerProps } from '../containers/Dashboard';\r\n\r\nconst Main = styled.div`\r\n  padding: 1.5rem;\r\n`;\r\nconst Wrapper = styled.div`\r\n  background-image: linear-gradient(transparent 20%, rgba(0, 0, 0, 0.767)),\r\n    ${(props) => `url(${props.resource})`};\r\n  background-position: center 25%;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  height: 25rem;\r\n  padding: 2rem;\r\n  display: flex !important;\r\n  justify-content: flex-start;\r\n  align-items: flex-end;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst StyledCarousel = styled(Carousel)`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .slick-list {\r\n    box-shadow: 0px 0px 40px rgba(201, 201, 201, 0.308);\r\n    border-radius: 5px;\r\n  }\r\n  .slick-dots-bottom {\r\n    width: 83%;\r\n    justify-content: flex-end;\r\n  }\r\n  .slick-dots li.slick-active button {\r\n    background: linear-gradient(#e00000, #a10000);\r\n    padding: 0.2rem;\r\n    border-radius: 10px;\r\n  }\r\n  .slick-dots li {\r\n    margin-right: 1rem;\r\n  }\r\n  .slick-dots li button {\r\n    padding: 0.2rem;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 45px;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  margin: 0;\r\n`;\r\n\r\nconst StyledRate = styled(Rate)`\r\n  font-size: 13px;\r\n  margin: 0.5rem 0;\r\n`;\r\nconst Btn = styled(Button)`\r\n  background: linear-gradient(#e00000, #a10000) !important;\r\n  border: none;\r\n  width: 100px;\r\n  margin-right: 2px;\r\n  &:hover {\r\n    background: linear-gradient(#ac0000, #960000) !important;\r\n  }\r\n`;\r\nconst SpinContainer = styled(Wrapper)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(128, 128, 128, 0.24);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst MainCarousel: React.FunctionComponent<CarouselContainerProps> = ({ movies }) => {\r\n  const antIcon = <LoadingOutlined style={{ color: 'red', fontSize: 24 }} spin />;\r\n  return (\r\n    <Main>\r\n      {!movies.length && (\r\n        <SpinContainer>\r\n          <Spin indicator={antIcon} />\r\n        </SpinContainer>\r\n      )}\r\n      <StyledCarousel dotPosition=\"bottom\">\r\n        {movies\r\n          .map(({ imDbRating, title, image, id }) => (\r\n            <Wrapper resource={image.replace(/._.+\\./, () => '._UX1000.')} key={id}>\r\n              <Content>\r\n                <Title>{title}</Title>\r\n                <StyledRate\r\n                  tooltips={[imDbRating]}\r\n                  disabled\r\n                  allowHalf\r\n                  count={5}\r\n                  defaultValue={Number(imDbRating) / 2}\r\n                />\r\n                <Space>\r\n                  <Link to={`watchmovie/${id}`}>\r\n                    <Btn type=\"primary\" size=\"middle\" danger>\r\n                      Watch now\r\n                    </Btn>\r\n                  </Link>\r\n                </Space>\r\n              </Content>\r\n            </Wrapper>\r\n          ))\r\n          .slice(0, 3)}\r\n      </StyledCarousel>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default MainCarousel;\r\n","import { LoadingOutlined } from '@ant-design/icons';\r\nimport { Button, Rate, Spin } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { CarouselContainerProps } from '../containers/Dashboard';\r\n\r\nconst Content = styled.div`\r\n  padding-top: 2rem;\r\n  @media (max-width: 576px) {\r\n    padding: 1.5rem;\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 576px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 180%;\r\n  line-height: 1;\r\n`;\r\n\r\nconst FilmTitle = styled.p`\r\n  font-size: 16px;\r\n  line-height: 1.2em;\r\n`;\r\n\r\nconst Year = styled.p`\r\n  font-size: 12px;\r\n  color: gray;\r\n`;\r\nconst StyledRate = styled(Rate)`\r\n  font-size: 13px;\r\n`;\r\nconst Image = styled.img`\r\n  margin-right: 15px;\r\n  border-radius: 10px;\r\n  width: 128px;\r\n  height: 176px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Btn = styled(Button)`\r\n  background: linear-gradient(#e00000, #a10000) !important;\r\n  border: none;\r\n  &:hover {\r\n    background: linear-gradient(#ac0000, #960000) !important;\r\n  }\r\n`;\r\n\r\nconst SidePanel: React.FunctionComponent<CarouselContainerProps> = ({ movies }) => {\r\n  const antIcon = <LoadingOutlined style={{ color: 'red', fontSize: 24 }} spin />;\r\n  return (\r\n    <Content>\r\n      <BoxTitle>Popular {!movies.length && <Spin indicator={antIcon} />}</BoxTitle>\r\n\r\n      {movies\r\n        .map(({ image, id, title, year, imDbRating }) => (\r\n          <Wrapper key={id}>\r\n            <Image src={image.replace(/._.+\\./, () => '._UX1000.')} alt=\"blabla\" />\r\n            <Info>\r\n              <FilmTitle>\r\n                {title}\r\n                <Year>{year}</Year>\r\n              </FilmTitle>\r\n\r\n              <StyledRate\r\n                tooltips={[imDbRating]}\r\n                disabled\r\n                allowHalf\r\n                count={5}\r\n                defaultValue={Number(imDbRating) / 2}\r\n              />\r\n              <Link to={`watchmovie/${id}`}>\r\n                <Btn type=\"primary\" size=\"middle\" danger>\r\n                  Watch now\r\n                </Btn>\r\n              </Link>\r\n            </Info>\r\n          </Wrapper>\r\n        ))\r\n        .slice(3, 8)}\r\n    </Content>\r\n  );\r\n};\r\nexport default SidePanel;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  ComingSoonItem,\r\n  MostPopularMovie,\r\n  Movie,\r\n  MoviesResponse,\r\n  SingleMovie,\r\n  Trailer,\r\n} from './types';\r\n\r\nconst moviesApi = axios.create({\r\n  baseURL: 'https://imdb-api.com/en/API/',\r\n});\r\n\r\nexport const top250Movies = async () => {\r\n  try {\r\n    const res = await moviesApi.get<MoviesResponse<Movie>>(\r\n      `MoviesResponse/${process.env.REACT_APP_API_KEY}`,\r\n    );\r\n    if (res.data.errorMessage) {\r\n      throw new Error(res.data.errorMessage);\r\n    } else {\r\n      return res.data.items;\r\n    }\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const comingSoon = async () => {\r\n  try {\r\n    const res = await moviesApi.get<MoviesResponse<ComingSoonItem>>(\r\n      `ComingSoon/${process.env.REACT_APP_API_KEY}`,\r\n    );\r\n    if (res.data.errorMessage) {\r\n      throw new Error(res.data.errorMessage);\r\n    } else {\r\n      return res.data.items;\r\n    }\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const mostPopularMovies = async () => {\r\n  try {\r\n    const res = await moviesApi.get<MoviesResponse<MostPopularMovie>>(\r\n      `MostPopularMovies/${process.env.REACT_APP_API_KEY}`,\r\n    );\r\n    if (res.data.errorMessage) {\r\n      throw new Error(res.data.errorMessage);\r\n    } else {\r\n      return res.data.items;\r\n    }\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const singleMovie = async (id: string) => {\r\n  try {\r\n    const res = await moviesApi.get<SingleMovie>(\r\n      `Title/${process.env.REACT_APP_API_KEY}/${id}/FullActor,Posters,Trailer,Images`,\r\n    );\r\n    return res.data;\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const trailer = async (id: string | undefined) => {\r\n  try {\r\n    const res = await moviesApi.get<Trailer>(`Trailer/${process.env.REACT_APP_API_KEY}/${id}/`);\r\n    return res.data;\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const mostPopularTVs = async () => {\r\n  try {\r\n    const res = await moviesApi.get<MoviesResponse<MostPopularMovie>>(\r\n      `MostPopularTVs/${process.env.REACT_APP_API_KEY}`,\r\n    );\r\n    if (res.data.errorMessage) {\r\n      throw new Error(res.data.errorMessage);\r\n    } else {\r\n      return res.data.items;\r\n    }\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return false;\r\n  }\r\n};\r\n","import { Dispatch } from 'react';\r\n\r\nimport { mostPopularMovies, mostPopularTVs, singleMovie, trailer } from '../../services/api';\r\nimport { MostPopularMovie, SingleMovie, Trailer } from '../../services/types';\r\nimport { MoviesActions, MoviesActionTypes } from './types';\r\n\r\nexport const setPopularMovies = (value: MostPopularMovie[]): MoviesActionTypes => ({\r\n  type: MoviesActions.SET_MOVIES,\r\n  payload: value,\r\n});\r\n\r\nexport const loadMovies = () => async (dispatch: Dispatch<MoviesActionTypes>) => {\r\n  const data = await mostPopularMovies();\r\n  if (data) {\r\n    dispatch(setPopularMovies(data));\r\n  }\r\n};\r\n\r\nexport const setMovieTitle = (value: SingleMovie): MoviesActionTypes => ({\r\n  type: MoviesActions.SET_MOVIE_TITLE,\r\n  payload: value,\r\n});\r\n\r\nexport const loadMovieTitle = (id: string) => async (dispatch: Dispatch<MoviesActionTypes>) => {\r\n  const data = await singleMovie(id);\r\n  if (data) {\r\n    dispatch(setMovieTitle(data));\r\n  }\r\n};\r\n\r\nexport const setPopularTVs = (value: MostPopularMovie[]): MoviesActionTypes => ({\r\n  type: MoviesActions.SET_TV,\r\n  payload: value,\r\n});\r\n\r\nexport const loadTVs = () => async (dispatch: Dispatch<MoviesActionTypes>) => {\r\n  const data = await mostPopularTVs();\r\n  if (data) {\r\n    dispatch(setPopularTVs(data));\r\n  }\r\n};\r\n\r\nexport const setMovieTrailer = (value: Trailer): MoviesActionTypes => ({\r\n  type: MoviesActions.SET_MOVIE_TRAILER,\r\n  payload: value,\r\n});\r\n\r\nexport const loadMovieTrailer = (id?: string) => async (dispatch: Dispatch<MoviesActionTypes>) => {\r\n  const data = await trailer(id);\r\n  if (data) {\r\n    dispatch(setMovieTrailer(data));\r\n  }\r\n};\r\n","import { Col, Row } from 'antd';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport FiveFilmsCarousel from '../components/FiveFilmsCarousel';\r\nimport MainCarousel from '../components/MainCarousel';\r\nimport SidePanel from '../components/SidePanel';\r\nimport { loadMovies } from '../redux/movies/actions';\r\nimport { MoviesStore } from '../redux/movies/reducer';\r\nimport { RootStore } from '../redux/store';\r\nimport { MostPopularMovie } from '../services/types';\r\n\r\nexport interface CarouselContainerProps {\r\n  movies: MostPopularMovie[];\r\n}\r\nconst DashboardContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector<RootStore, MoviesStore['movies']>((store) => store.movies.movies);\r\n  const sortedMovies = [...movies];\r\n  sortedMovies.sort(() => (Math.random() > 0.5 ? 1 : -1));\r\n  useEffect(() => {\r\n    dispatch(loadMovies());\r\n  }, []);\r\n  return (\r\n    <Row>\r\n      <Col sm={{ span: 24 }} lg={{ span: 19 }}>\r\n        <MainCarousel movies={movies} />\r\n        <Col span={24}>\r\n          <FiveFilmsCarousel movies={sortedMovies.slice(0, 20)} />\r\n        </Col>\r\n      </Col>\r\n      <Col sm={{ span: 24 }} lg={{ span: 4 }}>\r\n        <SidePanel movies={movies} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DashboardContainer;\r\n","import DashboardContainer from '../containers/Dashboard';\r\nimport Layout from '../containers/Layout';\r\n\r\nconst DashboardPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <DashboardContainer />\r\n  </Layout>\r\n);\r\n\r\nexport default DashboardPage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst DiscoveryPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Discovery page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default DiscoveryPage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst LibraryPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Library page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default LibraryPage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst MyListPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>MyList page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default MyListPage;\r\n","import { Button, Form, Input, Modal } from 'antd';\r\nimport { User } from 'firebase/auth';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateUserAsync } from '../redux/profile/actions';\r\n\r\nconst initialValues: Partial<User> = {};\r\nexport interface ProfileContainerProps {\r\n  profile?: User;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 2em 4em;\r\n`;\r\n\r\nconst ProfileContainer: React.FunctionComponent<ProfileContainerProps> = ({ profile }) => {\r\n  const dispatch = useDispatch();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [profileForm] = Form.useForm<Partial<User>>();\r\n\r\n  useEffect(\r\n    () => () => {\r\n      profileForm.resetFields();\r\n    },\r\n    [],\r\n  );\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleSubmitForm = (values: Partial<User>) => {\r\n    dispatch(\r\n      updateUserAsync({\r\n        displayName: values.displayName,\r\n        email: values.email,\r\n      }),\r\n    );\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <p>Name: {profile?.displayName}</p>\r\n      <Button size=\"small\" ghost onClick={showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal\r\n        title=\"Personal information\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"Personal information\"\r\n          form={profileForm}\r\n          layout=\"vertical\"\r\n          initialValues={{ ...initialValues, ...profile }}\r\n          onFinish={handleSubmitForm}\r\n        >\r\n          <Form.Item label=\"Name:\" name=\"displayName\">\r\n            <Input placeholder=\"Name\" />\r\n          </Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport Layout from '../containers/Layout';\r\nimport ProfileContainer from '../containers/Profile';\r\nimport { ProfileStore } from '../redux/profile/reducer';\r\nimport { RootStore } from '../redux/store';\r\n\r\nconst ProfilePage: React.FunctionComponent = () => {\r\n  const profile = useSelector<RootStore, ProfileStore['profile']>((store) => store.profile.profile);\r\n  return (\r\n    <Layout>\r\n      <ProfileContainer profile={profile} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst RecentPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Recent page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default RecentPage;\r\n","import Layout from '../containers/Layout';\r\n\r\nconst SettingsPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <div>Settings page</div>\r\n  </Layout>\r\n);\r\n\r\nexport default SettingsPage;\r\n","import { Col, Row } from 'antd';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport FiveFilmsCarousel from '../components/FiveFilmsCarousel';\r\nimport MainCarousel from '../components/MainCarousel';\r\nimport SidePanel from '../components/SidePanel';\r\nimport { loadTVs } from '../redux/movies/actions';\r\nimport { MoviesStore } from '../redux/movies/reducer';\r\nimport { RootStore } from '../redux/store';\r\nimport { MostPopularMovie } from '../services/types';\r\n\r\nexport interface CarouselContainerProps {\r\n  movies: MostPopularMovie[];\r\n}\r\nconst TvShowContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const series = useSelector<RootStore, MoviesStore['series']>((store) => store.movies.series);\r\n  const sortedSeries = [...series];\r\n  sortedSeries.sort(() => (Math.random() > 0.5 ? 1 : -1));\r\n  useEffect(() => {\r\n    dispatch(loadTVs());\r\n  }, []);\r\n  return (\r\n    <Row>\r\n      <Col sm={{ span: 24 }} lg={{ span: 19 }}>\r\n        <MainCarousel movies={series} />\r\n        <Col span={24}>\r\n          <FiveFilmsCarousel movies={sortedSeries.slice(0, 20)} />\r\n        </Col>\r\n      </Col>\r\n      <Col sm={{ span: 24 }} lg={{ span: 4 }}>\r\n        <SidePanel movies={series} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TvShowContainer;\r\n","import Layout from '../containers/Layout';\r\nimport TvShowContainer from '../containers/TvShow';\r\n\r\nconst TvShowPage: React.FunctionComponent = () => (\r\n  <Layout>\r\n    <TvShowContainer />\r\n  </Layout>\r\n);\r\n\r\nexport default TvShowPage;\r\n","import { Button, Col, Row, Space, Tag, Typography, Image } from 'antd';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport MovieCard from '../components/MovieCard';\r\nimport { loadMovieTrailer } from '../redux/movies/actions';\r\nimport { MoviesStore } from '../redux/movies/reducer';\r\nimport { RootStore } from '../redux/store';\r\nimport { SingleMovie } from '../services/types';\r\n\r\nconst Wrapper = styled.div`\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.425) 0%, rgb(0, 0, 0)),\r\n    ${(props) => `url(${props.resource})`};\r\n  background-position: top center;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 7em 10em;\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    padding: 2rem 2.5rem;\r\n  }\r\n`;\r\n\r\nconst BeforeTitleSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\nconst TopInfo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\nconst InfoItem = styled.p`\r\n  text-transform: uppercase;\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst AfterTitleSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 6em;\r\n  @media screen and (max-width: 576px) {\r\n    margin-bottom: 2.5rem;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    margin-bottom: 3rem;\r\n  }\r\n`;\r\n\r\nconst Keywords = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  @media screen and (max-width: 576px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Plot = styled.p`\r\n  @media screen and (max-width: 768px) {\r\n    margin: 1rem 0 1.5rem;\r\n  }\r\n`;\r\nconst BtnBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: 576px) {\r\n    margin-botton: 2rem;\r\n  }\r\n`;\r\n\r\nconst Btn = styled(Button)`\r\n  background: linear-gradient(#e00000, #a10000) !important;\r\n  border: none;\r\n  width: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  &:first-child {\r\n    margin-right: 10px;\r\n  }\r\n  &:hover {\r\n    background: linear-gradient(#ac0000, #960000) !important;\r\n  }\r\n`;\r\n\r\nconst ButtonTrailer = styled(Button)`\r\n  width: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: transparent !important;\r\n  padding: 0;\r\n  border: solid 1px #ac0000 !important;\r\n  &:hover {\r\n    background: rgba(255, 0, 0, 0.4) !important;\r\n    color: lightgray !important;\r\n  }\r\n`;\r\n\r\nconst Similar = styled.p`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst SlideContent = styled(Space)`\r\n  width: 100%;\r\n  @media screen and (max-width: 768px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\nconst StyledImage = styled(Image)`\r\n  width: calc(100% - 0.5rem * 2);\r\n  margin: 0.25rem 0.5rem;\r\n`;\r\n\r\ninterface WatchMovieProps {\r\n  singleMovie?: SingleMovie;\r\n}\r\n\r\nconst WatchMovieContainer: React.FunctionComponent<WatchMovieProps> = ({ singleMovie }) => {\r\n  const { Title } = Typography;\r\n\r\n  const dispatch = useDispatch();\r\n  const trailer = useSelector<RootStore, MoviesStore['trailer']>((store) => store.movies.trailer);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMovieTrailer(singleMovie?.id));\r\n  }, [singleMovie?.id]);\r\n\r\n  return (\r\n    <Wrapper resource={singleMovie?.posters?.posters[1].link}>\r\n      <BeforeTitleSection>\r\n        <TopInfo>\r\n          <InfoItem>\r\n            {singleMovie?.type.toUpperCase().includes('MOVIE') ? (\r\n              <i className=\"bi bi-camera-reels\"> {singleMovie?.type}</i>\r\n            ) : (\r\n              <i className=\"bi bi-tv\"> {singleMovie?.type}</i>\r\n            )}\r\n          </InfoItem>\r\n\r\n          <InfoItem>\r\n            {singleMovie?.runtimeMins !== '' ? (\r\n              <i className=\"bi bi-stopwatch\"> {singleMovie?.runtimeStr}</i>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </InfoItem>\r\n\r\n          <InfoItem>\r\n            <i className=\"bi bi-calendar2\"> {singleMovie?.year}</i>\r\n          </InfoItem>\r\n        </TopInfo>\r\n        <Title style={{ textAlign: 'center' }} level={1}>\r\n          {singleMovie?.title}\r\n        </Title>\r\n      </BeforeTitleSection>\r\n\r\n      <AfterTitleSection>\r\n        <Row gutter={[24, 24]}>\r\n          <Col xs={24} sm={12}>\r\n            <Keywords>\r\n              {singleMovie?.keywords.split(',').map((word) => (\r\n                <Tag key={singleMovie.id}>{word}</Tag>\r\n              ))}\r\n            </Keywords>\r\n            <Plot>{singleMovie?.plot}</Plot>\r\n            <BtnBox>\r\n              <Link to={`/watchnow/${singleMovie?.id}`}>\r\n                <Btn type=\"primary\" size=\"middle\" danger>\r\n                  Watch now\r\n                </Btn>\r\n              </Link>\r\n              {trailer?.link ? (\r\n                <ButtonTrailer href={trailer?.link} type=\"primary\" size=\"middle\" danger>\r\n                  Watch trailer\r\n                </ButtonTrailer>\r\n              ) : null}\r\n            </BtnBox>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            {singleMovie?.images?.items.slice(0, 4).map(({ image }) => (\r\n              <StyledImage width=\"50%\" src={image} key={singleMovie.images?.imDbid} />\r\n            ))}\r\n          </Col>\r\n        </Row>\r\n      </AfterTitleSection>\r\n      <Similar>Similar:</Similar>\r\n      <SlideContent align=\"center\" wrap>\r\n        {singleMovie?.similars.slice(0, 5).map(({ image, fullTitle, id, imDbRating }) => (\r\n          <Link to={`../watchmovie/${id}`} key={id}>\r\n            <MovieCard key={id} id={id} imDbRating={imDbRating} image={image} title={fullTitle} />\r\n          </Link>\r\n        ))}\r\n      </SlideContent>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WatchMovieContainer;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Layout from '../containers/Layout';\r\nimport WatchMovieContainer from '../containers/WatchMovie';\r\nimport { loadMovieTitle } from '../redux/movies/actions';\r\nimport { MoviesStore } from '../redux/movies/reducer';\r\nimport { RootStore } from '../redux/store';\r\n\r\nexport interface MovieIdProps {\r\n  movieId: string;\r\n}\r\nconst WatchMoviePage: React.FunctionComponent<MovieIdProps> = ({ movieId }) => {\r\n  const dispatch = useDispatch();\r\n  const singleMovie = useSelector<RootStore, MoviesStore['singleMovie']>(\r\n    (store) => store.movies.singleMovie,\r\n  );\r\n  useEffect(() => {\r\n    dispatch(loadMovieTitle(movieId));\r\n  }, [movieId]);\r\n  return (\r\n    <Layout>\r\n      <WatchMovieContainer singleMovie={singleMovie} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default WatchMoviePage;\r\n","import { Space, Typography } from 'antd';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactYouTubeLite } from 'react-youtube-lite';\r\nimport styled from 'styled-components';\r\n\r\nimport MovieCard from '../components/MovieCard';\r\nimport { SingleMovie } from '../services/types';\r\n\r\nconst Wrapper = styled.div`\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.425) 0%, rgb(0, 0, 0)),\r\n    ${(props) => `url(${props.resource})`};\r\n  background-position: top center;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 7em 10em;\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    padding: 2rem 2.5rem;\r\n  }\r\n`;\r\n\r\nconst BeforeTitleSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\nconst TopInfo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\nconst InfoItem = styled.p`\r\n  text-transform: uppercase;\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst AfterTitleSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst Similar = styled.p`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst SlideContent = styled(Space)`\r\n  width: 100%;\r\n  @media screen and (max-width: 768px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\ninterface WatchMovieProps {\r\n  singleMovie?: SingleMovie;\r\n}\r\n\r\nconst WatchNowContainer: React.FC<WatchMovieProps> = ({ singleMovie }) => {\r\n  const { Title } = Typography;\r\n  return (\r\n    <Wrapper resource={singleMovie?.posters?.posters[1].link}>\r\n      <BeforeTitleSection>\r\n        <TopInfo>\r\n          <InfoItem>\r\n            <i className=\"bi bi-camera-reels\"> {singleMovie?.type}</i>\r\n          </InfoItem>\r\n\r\n          <InfoItem>\r\n            {singleMovie?.runtimeMins !== '' ? (\r\n              <i className=\"bi bi-stopwatch\"> {singleMovie?.runtimeStr}</i>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </InfoItem>\r\n\r\n          <InfoItem>\r\n            <i className=\"bi bi-calendar2\"> {singleMovie?.year}</i>\r\n          </InfoItem>\r\n        </TopInfo>\r\n        <Title style={{ textAlign: 'center' }} level={1}>\r\n          {singleMovie?.title}\r\n        </Title>\r\n      </BeforeTitleSection>\r\n\r\n      <AfterTitleSection>\r\n        <ReactYouTubeLite\r\n          url=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley\"\r\n          playlist={false}\r\n          adNetwork={false}\r\n        />\r\n      </AfterTitleSection>\r\n      <Similar>Similar:</Similar>\r\n      <SlideContent align=\"center\" wrap>\r\n        {singleMovie?.similars.slice(0, 5).map(({ image, fullTitle, id, imDbRating }) => (\r\n          <Link to={`../watchmovie/${id}`} key={id}>\r\n            <MovieCard key={id} id={id} imDbRating={imDbRating} image={image} title={fullTitle} />\r\n          </Link>\r\n        ))}\r\n      </SlideContent>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WatchNowContainer;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Layout from '../containers/Layout';\r\nimport WatchNowContainer from '../containers/WatchNow';\r\nimport { loadMovieTitle } from '../redux/movies/actions';\r\nimport { MoviesStore } from '../redux/movies/reducer';\r\nimport { RootStore } from '../redux/store';\r\n\r\nexport interface MovieIdProps {\r\n  movieId: string;\r\n}\r\nconst WatchNowPage: React.FC<MovieIdProps> = ({ movieId }) => {\r\n  const dispatch = useDispatch();\r\n  const singleMovie = useSelector<RootStore, MoviesStore['singleMovie']>(\r\n    (store) => store.movies.singleMovie,\r\n  );\r\n  useEffect(() => {\r\n    dispatch(loadMovieTitle(movieId));\r\n  }, [movieId]);\r\n  return (\r\n    <Layout>\r\n      <WatchNowContainer singleMovie={singleMovie} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default WatchNowPage;\r\n","import { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport ComingSoonPage from './pages/ComingSoon';\r\nimport DashboardPage from './pages/Dashboard';\r\nimport DiscoveryPage from './pages/Discovery';\r\nimport LibraryPage from './pages/Library';\r\nimport MyListPage from './pages/MyList';\r\nimport ProfilePage from './pages/Profile';\r\nimport RecentPage from './pages/Recent';\r\nimport SettingsPage from './pages/Settings';\r\nimport TvShowPage from './pages/TvShow';\r\nimport WatchMoviePage from './pages/WatchMovie';\r\nimport WatchNowPage from './pages/WatchNow';\r\n\r\nconst App: React.FunctionComponent = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <Redirect to=\"/dashboard\" />\r\n      </Route>\r\n      <Route path=\"/dashboard\">\r\n        <DashboardPage />\r\n      </Route>\r\n      <Route path=\"/recent\">\r\n        <RecentPage />\r\n      </Route>\r\n      <Route path=\"/discovery\">\r\n        <DiscoveryPage />\r\n      </Route>\r\n      <Route path=\"/coming-soon\">\r\n        <ComingSoonPage />\r\n      </Route>\r\n      <Route path=\"/tv-show\">\r\n        <TvShowPage />\r\n      </Route>\r\n      <Route path=\"/library\">\r\n        <LibraryPage />\r\n      </Route>\r\n      <Route path=\"/my-list\">\r\n        <MyListPage />\r\n      </Route>\r\n      <Route path=\"/settings\">\r\n        <SettingsPage />\r\n      </Route>\r\n      <Route\r\n        path=\"/watchmovie/:id\"\r\n        render={({ match }) => <WatchMoviePage movieId={match.params.id} />}\r\n      />\r\n      <Route path=\"/watchmovie\">\r\n        <WatchMoviePage movieId=\"\" />\r\n      </Route>\r\n      <Route\r\n        path=\"/watchnow/:id\"\r\n        render={({ match }) => <WatchNowPage movieId={match.params.id} />}\r\n      />\r\n      <Route path=\"/watchnow\">\r\n        <WatchNowPage movieId=\"\" />\r\n      </Route>\r\n      <Route path=\"/profile\">\r\n        <ProfilePage />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <div>THIS PAGE NOT EXIST</div>\r\n      </Route>\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import { MostPopularMovie, SingleMovie, Trailer } from '../../services/types';\r\nimport { MoviesActionTypes, MoviesActions } from './types';\r\n\r\nexport interface MoviesStore {\r\n  movies: MostPopularMovie[];\r\n  singleMovie?: SingleMovie;\r\n  series: MostPopularMovie[];\r\n  trailer?: Trailer;\r\n}\r\n\r\nconst initialStore: MoviesStore = {\r\n  movies: [],\r\n  series: [],\r\n};\r\n\r\nconst app = (store = initialStore, action: MoviesActionTypes) => {\r\n  switch (action.type) {\r\n    case MoviesActions.SET_MOVIES:\r\n      return { ...store, movies: action.payload };\r\n    case MoviesActions.SET_MOVIE_TITLE:\r\n      return { ...store, singleMovie: action.payload };\r\n    case MoviesActions.SET_TV:\r\n      return { ...store, series: action.payload };\r\n    case MoviesActions.SET_MOVIE_TRAILER:\r\n      return { ...store, trailer: action.payload };\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import { User } from 'firebase/auth';\r\n\r\nimport { ProfileActions, ProfileActionTypes } from './types';\r\n\r\nexport interface ProfileStore {\r\n  profile?: User;\r\n}\r\n\r\nconst initialStore: ProfileStore = {};\r\n\r\nconst profile = (store = initialStore, action: ProfileActionTypes) => {\r\n  switch (action.type) {\r\n    case ProfileActions.SET_CURRENT_USER:\r\n      return { ...store, profile: action.payload };\r\n    case ProfileActions.UPDATE_CURRENT_USER:\r\n      if (store.profile) {\r\n        return { ...store, profile: { ...store.profile, ...action.payload } };\r\n      }\r\n      return store;\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default profile;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport movies from './movies/reducer';\r\nimport profile from './profile/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies,\r\n  profile,\r\n});\r\n\r\nconst middlewares = [];\r\n\r\nmiddlewares.push(thunk);\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport type RootStore = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nimport 'antd/dist/antd.dark.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}