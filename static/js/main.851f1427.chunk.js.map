{"version":3,"sources":["redux/app/types.ts","redux/app/actions.ts","App.tsx","redux/app/reducer.ts","redux/store.ts","index.tsx"],"names":["AppActions","general","css","rotate","Wrapper","styled","Layout","Content","props","FighterCard","Card","FighterCardMeta","Meta","StyledFighterImage","Image","FightersPanel","Space","ControlPanel","Arena","Img","img","RotatedImg","HP","div","WinPanel","WinnerName","sleep","ms","Promise","resolve","setTimeout","App","dispatch","useDispatch","fighters","useSelector","store","app","useState","selectedFighters","onSelectedFightersChange","fighter1","fighter2","onFightersChange","isFighting","onFightingStateChange","winnerName","onWinnerNameChange","useEffect","map","name","find","el","kick","attacker","defencer","a","kickValue","attack","defense","tempDefencer","health","Math","floor","fetchUsers","fetch","result","json","data","value","type","SET_FIGHTERS","payload","aria-expanded","direction","src","onClick","align","alt","source","percent","showInfo","length","aria-colindex","indexOf","fighterName","includes","filter","cover","title","description","disabled","danger","size","initialStore","counter","action","INC_COUNTER","DEC_COUNTER","rootReducer","combineReducers","middlewares","push","thunk","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.851f1427.chunk.js","sourcesContent":["import { Fighter } from './reducer';\r\n\r\nexport enum AppActions {\r\n  INC_COUNTER = 'INC_COUNTER',\r\n  DEC_COUNTER = 'DEC_COUNTER',\r\n  SET_FIGHTERS = 'SET_FIGHTERS',\r\n}\r\n\r\ninterface IncreaseCounterAction {\r\n  type: AppActions.INC_COUNTER;\r\n  payload: number;\r\n}\r\n\r\ninterface DecreaseCounterAction {\r\n  type: AppActions.DEC_COUNTER;\r\n  payload: number;\r\n}\r\n\r\ninterface AddFightersAction {\r\n  type: AppActions.SET_FIGHTERS;\r\n  payload: Fighter[];\r\n}\r\n\r\nexport type AppActionTypes = IncreaseCounterAction | DecreaseCounterAction | AddFightersAction;\r\n","import { Dispatch } from 'react';\r\n\r\nimport { Fighter } from './reducer';\r\nimport { AppActionTypes, AppActions } from './types';\r\n\r\nexport const increaseCounter = (value: number): AppActionTypes => ({\r\n  type: AppActions.INC_COUNTER,\r\n  payload: value,\r\n});\r\n\r\nexport const decreaseCounter = (value: number): AppActionTypes => ({\r\n  type: AppActions.DEC_COUNTER,\r\n  payload: value,\r\n});\r\n\r\nexport const setFighters = (value: Fighter[]): AppActionTypes => ({\r\n  type: AppActions.SET_FIGHTERS,\r\n  payload: value,\r\n});\r\n\r\nexport const loadFighters = () => async (dispatch: Dispatch<AppActionTypes>) => {\r\n  const result = await fetch(\r\n    'https://gist.githubusercontent.com/alexandrtovmach/3fcf6c0819d6830e21b5f3c117c2c5aa/raw/0b00273489dbf90980296d0908183fc3494c2ad4/userlist.json',\r\n  );\r\n  const data = await result.json();\r\n  dispatch(setFighters(data));\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\nimport { Button, Card, Divider, Image, Layout, Progress, Space } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { loadFighters } from './redux/app/actions';\r\nimport { AppStore, Fighter } from './redux/app/reducer';\r\nimport { RootStore } from './redux/store';\r\n\r\nconst general = css`\r\n  .ant-card-body {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst rotate = css`\r\n  .ant-space-item {\r\n    .ant-image-img {\r\n      height: 300px;\r\n    }\r\n    &:last-of-type {\r\n      .ant-image-img {\r\n        transform: rotateY(180deg);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled(Layout)`\r\n  ${general}\r\n  height: 100vh;\r\n`;\r\n\r\nconst Content = styled(Layout.Content)`\r\n  background: ${(props) => `${\r\n    props['aria-expanded'] ? 'linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), ' : ''\r\n  }\r\n      url('https://cutewallpaper.org/21/street-fighter-background/Street-Fighter-background-Street-fighter-characters-.jpg')\r\n    `};\r\n  background-size: auto 100%;\r\n  background-position: center;\r\n  overflow: auto;\r\n  padding: 5rem;\r\n`;\r\n\r\nconst FighterCard = styled(Card)`\r\n  margin: 1rem;\r\n  background-color: rgba(238, 130, 238, 0.4);\r\n  width: 200px;\r\n  box-shadow: ${(props) => {\r\n    if (props['aria-colindex'] === 0) {\r\n      return '0 0 0 5px blue';\r\n    }\r\n    if (props['aria-colindex'] === 1) {\r\n      return '0 0 0 5px green';\r\n    }\r\n    return 'none';\r\n  }};\r\n`;\r\n\r\nconst FighterCardMeta = styled(Card.Meta)``;\r\n\r\nconst StyledFighterImage = styled(Image)`\r\n  height: 150px;\r\n  width: auto;\r\n  margin: 1rem auto;\r\n`;\r\n\r\nconst FightersPanel = styled(Space)`\r\n  width: 100%;\r\n  min-height: 200px;\r\n  overflow-x: auto;\r\n  background-color: wheat;\r\n`;\r\n\r\nconst ControlPanel = styled(Space)`\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  background-color: wheat;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Arena = styled(Space)`\r\n  ${rotate}\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  height: 80vh;\r\n`;\r\n\r\nconst Img = styled.img``;\r\n\r\nconst RotatedImg = styled(Img)`\r\n  transform: rotateY(180deg);\r\n`;\r\n\r\nconst HP = styled.div`\r\n  background-color: red;\r\n  padding: 0 0.5rem;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 300px;\r\n`;\r\n\r\nconst WinPanel = styled(Space)`\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst WinnerName = styled.div`\r\n  font-size: 60px;\r\n  color: orange;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nconst sleep = (ms: number) =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n\r\nconst App: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const fighters = useSelector<RootStore, AppStore['fighters']>((store) => store.app.fighters);\r\n  const [selectedFighters, onSelectedFightersChange] = useState<string[]>([]); // done\r\n  const [[fighter1, fighter2], onFightersChange] = useState<Fighter[]>([]);\r\n  const [isFighting, onFightingStateChange] = useState<boolean>(false); // done\r\n  const [winnerName, onWinnerNameChange] = useState<string>(''); // done\r\n\r\n  useEffect(() => {\r\n    onFightersChange(\r\n      selectedFighters.map((name) => fighters.find((el) => el.name === name) as Fighter),\r\n    );\r\n  }, [selectedFighters]);\r\n\r\n  const kick = async (attacker: Fighter, defencer: Fighter) => {\r\n    await sleep(1000);\r\n    const kickValue = attacker.attack * (defencer.defense / 3);\r\n    const tempDefencer: Fighter = {\r\n      ...defencer,\r\n      health: Math.floor(defencer.health - kickValue),\r\n    };\r\n    if (tempDefencer.health <= 0) {\r\n      onWinnerNameChange(attacker.name);\r\n      onFightingStateChange(false);\r\n    } else {\r\n      kick(tempDefencer, attacker);\r\n    }\r\n    onFightersChange(\r\n      [fighter1, fighter2].map((el) => (el.name === tempDefencer.name ? tempDefencer : attacker)),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFighting) {\r\n      kick(fighter1, fighter2);\r\n    }\r\n  }, [isFighting]);\r\n\r\n  const fetchUsers = async () => {\r\n    dispatch(loadFighters());\r\n  };\r\n\r\n  const handleFightClick = () => onFightingStateChange(!isFighting);\r\n\r\n  const handleFighterClick = (fighterName: string) => {\r\n    if (selectedFighters.length < 2) {\r\n      onSelectedFightersChange([...selectedFighters, fighterName]);\r\n    }\r\n    if (selectedFighters.includes(fighterName)) {\r\n      onSelectedFightersChange(selectedFighters.filter((name) => name !== fighterName));\r\n    }\r\n  };\r\n\r\n  const handleNewFight = () => {\r\n    onWinnerNameChange('');\r\n    onSelectedFightersChange([]);\r\n    onFightersChange([]);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content aria-expanded={!isFighting}>\r\n        {winnerName ? (\r\n          <WinPanel direction=\"vertical\">\r\n            <Img src=\"https://pngimage.net/wp-content/uploads/2018/06/ko-png-3.png\" />\r\n            <WinnerName>{winnerName}</WinnerName>\r\n            <Button onClick={handleNewFight}>Start new fight</Button>\r\n          </WinPanel>\r\n        ) : isFighting ? (\r\n          <Arena align=\"center\">\r\n            <Space direction=\"vertical\">\r\n              <Img alt=\"example\" src={fighter1.source} />\r\n              <HP>\r\n                <Progress\r\n                  percent={\r\n                    100 *\r\n                    (fighter1.health /\r\n                      (fighters.find((el) => el.name === fighter1.name)?.health || 100))\r\n                  }\r\n                  showInfo={false}\r\n                />\r\n              </HP>\r\n            </Space>\r\n            <Space direction=\"vertical\">\r\n              <RotatedImg alt=\"example\" src={fighter2.source} />\r\n              <HP>\r\n                <Progress\r\n                  percent={\r\n                    100 *\r\n                    (fighter2.health /\r\n                      (fighters.find((el) => el.name === fighter2.name)?.health || 100))\r\n                  }\r\n                  showInfo={false}\r\n                />\r\n              </HP>\r\n            </Space>\r\n          </Arena>\r\n        ) : (\r\n          <FightersPanel>\r\n            {fighters.length ? (\r\n              fighters.map(({ name, source, attack, defense, health }) => (\r\n                <FighterCard\r\n                  key={name}\r\n                  aria-colindex={selectedFighters.indexOf(name)}\r\n                  onClick={() => handleFighterClick(name)}\r\n                  cover={<StyledFighterImage alt=\"example\" src={source} />}\r\n                >\r\n                  <FighterCardMeta\r\n                    title={name}\r\n                    description={`Attack: ${attack} Defence: ${defense} Health: ${health}`}\r\n                  />\r\n                </FighterCard>\r\n              ))\r\n            ) : (\r\n              <Button onClick={fetchUsers}>Load fighters</Button>\r\n            )}\r\n          </FightersPanel>\r\n        )}\r\n        <Divider />\r\n        {!isFighting && !winnerName && (\r\n          <ControlPanel>\r\n            <Button\r\n              onClick={handleFightClick}\r\n              disabled={selectedFighters.length < 2}\r\n              type=\"primary\"\r\n              danger\r\n              size=\"large\"\r\n            >\r\n              Fight!\r\n            </Button>\r\n          </ControlPanel>\r\n        )}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { AppActionTypes, AppActions } from './types';\r\n\r\nexport interface Fighter {\r\n  attack: number;\r\n  defense: number;\r\n  health: number;\r\n  name: string;\r\n  source: string;\r\n}\r\n\r\nexport interface AppStore {\r\n  counter: number;\r\n  fighters: Fighter[];\r\n}\r\n\r\nconst initialStore: AppStore = {\r\n  counter: 0,\r\n  fighters: [],\r\n};\r\n\r\nconst app = (store = initialStore, action: AppActionTypes) => {\r\n  switch (action.type) {\r\n    case AppActions.INC_COUNTER:\r\n      return { ...store, counter: store.counter + action.payload };\r\n    case AppActions.DEC_COUNTER:\r\n      return { ...store, counter: store.counter - action.payload };\r\n    case AppActions.SET_FIGHTERS:\r\n      return { ...store, fighters: action.payload };\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport app from './app/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n});\r\n\r\nconst middlewares = [];\r\n\r\nmiddlewares.push(thunk);\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport type RootStore = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}